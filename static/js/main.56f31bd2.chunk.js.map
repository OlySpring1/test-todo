{"version":3,"sources":["store/todos.ts","store/search.ts","store/index.ts","component/PopUp/PopUp.tsx","component/Todo/Todo.tsx","component/TodoList/TodoList.tsx","component/Search/Search.tsx","component/NewTodo/NewTodo.tsx","App.tsx","index.tsx"],"names":["initialState","localStorage","getItem","JSON","parse","todos","action","type","id","uuidv4","text","completed","map","todo","filter","reducer","query","rootReducer","combineReducers","getTodos","state","getVisibleTodos","toLowerCase","includes","store","createStore","composeWithDevTools","PopUp","closePopUp","confirmAction","name","className","onClick","Todo","dispatch","useDispatch","useState","isToggle","setIsToggle","openConfirmationModal","setOpenConfirmationModal","cn","href","removeTodo","TodoList","visibleTodos","useSelector","key","Search","setVisibleQueryWithDebounce","useCallback","debounce","actualQuery","placeholder","onKeyUp","e","value","target","handleOnKeyUp","NewTodo","titleTask","setTitleTask","titleError","seTtitleError","setTitleTaskWithDebounce","onChange","length","App","useEffect","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56f31bd2.chunk.js","sourcesContent":["import { Action } from 'redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst ADD_TODO = 'ADD_TODO';\r\nconst TOGGLE_TODO = 'TOGGLE_TODO';\r\nconst REMOVE_TODO = 'REMOVE_TODO';\r\n\r\nexport const addTodo = (text: string) => ({\r\n  type: 'ADD_TODO',\r\n  text,\r\n})\r\n\r\nexport const toggleTodo = (id: string) => ({\r\n  type: 'TOGGLE_TODO',\r\n  id,\r\n})\r\n\r\nexport const removeTodo = (id: string) => ({\r\n  type: REMOVE_TODO,\r\n  id,\r\n})\r\n\r\ntype addTodo = Action<typeof ADD_TODO> & {\r\n  text: string;\r\n};\r\n\r\ntype toggleTodo = Action<typeof TOGGLE_TODO> & {\r\n  id: string;\r\n};\r\n\r\ntype removeTodo = Action<typeof REMOVE_TODO> & {\r\n  id: string;\r\n};\r\n\r\ntype AllowedActions = addTodo | toggleTodo | removeTodo;\r\n\r\nlet initialState: Todo[] = [];\r\n\r\nif (localStorage.getItem('todos')) {\r\n  initialState = [...JSON.parse(localStorage.getItem('todos') || '')];\r\n}\r\n\r\nconst todos = (todos = initialState, action: AllowedActions) => {\r\n  switch (action.type) {\r\n    case 'ADD_TODO':\r\n      return [\r\n        ...todos,\r\n        {\r\n          id: uuidv4(),\r\n          text: action.text,\r\n          completed: false\r\n        }\r\n      ]\r\n    case 'TOGGLE_TODO':\r\n      return todos.map(todo => (\r\n        todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\r\n      ))\r\n    case 'REMOVE_TODO':\r\n      return todos.filter(todo => todo.id !== action.id)\r\n    default:\r\n      return todos\r\n  }\r\n}\r\n\r\nexport default todos;","import { Action } from 'redux';\n\nconst QUERY = 'QUERY';\n\nexport const setQuery = (query: string) => (\n  {\n    type: QUERY,\n    query,\n  }\n);\n\ntype setQuery = Action<typeof QUERY> & {\n  query: string;\n}\n\ntype AllowedActions = setQuery;\n\nconst reducer = (query = '', action: AllowedActions) => {\n  switch (action.type) {\n    case QUERY:\n      return action.query;\n    default:\n      return query;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport todos from './todos';\r\nimport query from './search';\r\n\r\nconst rootReducer = combineReducers({\r\n  todos,\r\n  query,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport const getTodos = (state: RootState) => state.todos;\r\nexport const getQuery = (state: RootState) => state.query;\r\n\r\nexport const getVisibleTodos = (state: RootState) => {\r\n  return state.todos\r\n    .filter((todo: Todo) => (\r\n      (todo.text)\r\n        .toLowerCase()\r\n        .includes(state.query.toLowerCase())\r\n    ));\r\n};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport './PopUp.scss';\r\n\r\ntype PropsPopUp = {\r\n  text: string;\r\n  name: string;\r\n  closePopUp: () => void;\r\n  confirmAction: () => void;\r\n\r\n}\r\n\r\nconst PopUp: React.FC<PropsPopUp> = ({ closePopUp, confirmAction, text, name }) => (\r\n  <div id=\"popup1\" className='overlay'>\r\n    <div className='popup'>\r\n      <h1 className='popup__message'>{`${text} \"${name}\" ?`}</h1>\r\n      <div className=\"popup__buttons\">\r\n        <button\r\n          className='popup__confirm-btn btn'\r\n          onClick={() => confirmAction()}\r\n          type=\"button\"\r\n        >\r\n          Ok\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className='popup__cancel-btn btn'\r\n          onClick={() => closePopUp()}\r\n        >\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n)\r\n\r\n\r\nexport default PopUp;","import React, { useState } from 'react';\r\nimport './Todo.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeTodo, toggleTodo } from '../../store/todos';\r\nimport PopUp from '../PopUp/PopUp';\r\nimport cn from 'classnames';\r\ntype PropsTodo = {\r\n  todo: Todo\r\n}\r\n\r\nconst Todo: React.FC<PropsTodo> = ({ todo }) => {\r\n  const dispatch = useDispatch();\r\n  const [isToggle, setIsToggle] = useState(false);\r\n  const [openConfirmationModal, setOpenConfirmationModal] = useState(false);\r\n  const changeStatus = () => {\r\n    dispatch(toggleTodo(todo.id));\r\n    setIsToggle(!isToggle);\r\n\r\n  }\r\n\r\n  const deleteTodo = (id: string) => {\r\n    dispatch(removeTodo(id))\r\n  }\r\n  return (\r\n    <li className=\"todo\">\r\n      <button\r\n        type=\"button\"\r\n        className={cn(\"todo__item\", {\r\n          \"todo__item-active\": isToggle\r\n        })}\r\n        onClick={changeStatus}\r\n      >\r\n        {todo.text}\r\n      </button>\r\n      {isToggle && (\r\n        <a href=\"#popup1\"\r\n          className=\"todo__btn-delete\"\r\n          onClick={() => setOpenConfirmationModal(true)}\r\n        >\r\n          Delete\r\n        </a>\r\n      )}\r\n\r\n      {openConfirmationModal && (\r\n        <PopUp\r\n          name={todo.text}\r\n          text='Do you really want delete'\r\n          closePopUp={() => setOpenConfirmationModal(false)}\r\n          confirmAction={() => deleteTodo(todo.id)}\r\n        />\r\n      )}\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport './TodoList.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { getVisibleTodos } from '../../store';\r\nimport Todo from '../Todo/Todo';\r\n\r\nconst TodoList = () => {\r\n  const visibleTodos = useSelector(getVisibleTodos);\r\n\r\n  return (\r\n    <ul className=\"todoapp\">\r\n      {visibleTodos.map((todo: Todo) => (\r\n        <Todo key={todo.id} todo={todo} />\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TodoList;","import React, { useCallback, KeyboardEvent } from 'react';\r\nimport './Search.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport debounce from 'lodash.debounce';\r\nimport { setQuery } from '../../store/search';\r\n\r\nconst Search = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const setVisibleQueryWithDebounce = useCallback(\r\n    debounce((actualQuery: string) => dispatch(setQuery(actualQuery)), 500), [],\r\n  );\r\n\r\n  const handleOnKeyUp = (e: KeyboardEvent) => {\r\n    const { value } = e.target as HTMLInputElement;\r\n    setVisibleQueryWithDebounce(value);\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1 className=\"h1\">todos</h1>\r\n      <input\r\n        type=\"text\"\r\n        className=\"search\"\r\n        placeholder=\"Enter task name for search...\"\r\n        onKeyUp={(e) => handleOnKeyUp(e)}\r\n      />\r\n    </header>\r\n  )\r\n}\r\nexport default Search;","import React, { useState, useCallback } from 'react';\r\nimport './NewTodo.scss';\r\nimport { useDispatch } from 'react-redux';\r\nimport debounce from 'lodash.debounce';\r\nimport { addTodo } from '../../store/todos';\r\n\r\nconst NewTodo = () => {\r\n  const dispatch = useDispatch();\r\n  const [titleTask, setTitleTask] = useState('');\r\n  const [titleError, seTtitleError] = useState(false);\r\n\r\n  const setTitleTaskWithDebounce = useCallback(\r\n    debounce((actualQuery: string) => dispatch(addTodo(actualQuery)), 500), []\r\n  );\r\n\r\n  const handleOnChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const { value } = e.target as HTMLInputElement;\r\n    setTitleTask(value);\r\n    seTtitleError(false);\r\n  };\r\n\r\n  const handleOnClick = () => {\r\n    if (titleTask.length === 0) {\r\n      seTtitleError(true);\r\n      return;\r\n    }\r\n\r\n    setTitleTaskWithDebounce(titleTask);\r\n    setTitleTask('');\r\n  }\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n    <div className=\"new-todo\">\r\n    <input\r\n      type=\"text\"\r\n      className=\"new-todo__input\"\r\n      placeholder=\"Enter task and press &quot;Add Text&quot; button\"\r\n      value={titleTask}\r\n      onChange={handleOnChange}\r\n    />\r\n    <button \r\n      type=\"button\" \r\n      onClick={handleOnClick} \r\n      className=\"new-todo__btn\" \r\n    >\r\n      Add Task\r\n      </button>\r\n    </div>\r\n    {titleError && (\r\n      <p className=\"error\">Please, enter a task</p>\r\n    )}\r\n  </footer>\r\n  )\r\n}\r\nexport default NewTodo;","import React, { useEffect } from 'react';\nimport './App.scss';\nimport { useSelector } from 'react-redux';\nimport TodoList from './component/TodoList/TodoList';\nimport Search from './component/Search/Search';\nimport { getTodos } from './store';\nimport NewTodo from './component/NewTodo/NewTodo';\n\nconst App = () => {\n  const todos = useSelector(getTodos);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify([...todos]));\n  }, [todos]);\n\n  return (\n    <div >\n      <Search />\n      <TodoList />\n      <NewTodo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}